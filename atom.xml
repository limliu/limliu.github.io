<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘战京的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-02T15:38:29.940Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>刘战京</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何使用Hexo框架部署一个博客</title>
    <link href="http://yoursite.com/2017/08/02/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E6%A1%86%E6%9E%B6%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/08/02/如何使用Hexo框架部署一个博客/</id>
    <published>2017-08-02T13:32:41.000Z</published>
    <updated>2017-08-02T15:38:29.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于GitHub"><a href="#关于GitHub" class="headerlink" title="关于GitHub"></a>关于GitHub</h2><p>1.Github的优点</p>
<ul>
<li>[GitHub官网][4]</li>
<li>GitHub是基于git实现的代码托管.git可能是目前最好用的版本控制系统了,非常受欢迎.</li>
<li>GitHub可以免费使用,并且快速稳定.</li>
<li>Github上面的世界很精彩,用久了你的眼界会开阔很多.</li>
</ul>
<p>2.什么是Github Pages?</p>
<ul>
<li>Github Pages可以被认为是用户编写的,托管在github上的静态网页.</li>
</ul>
<p>3.为什么要使用Github Pages?</p>
<ul>
<li>可以绑定你的域名(但暂时貌似只能绑定一个).</li>
<li>简单快捷,使用Github Pages可以为你提供一个免费的服务器,免去了自己搭建服务器和写数据库的麻烦.</li>
</ul>
<h2 id="关于Hexo"><a href="#关于Hexo" class="headerlink" title="关于Hexo"></a>关于Hexo</h2><p>1.Hexo是什么?</p>
<ul>
<li>[Hexo官网][5]</li>
<li>正如官网所介绍的: A fast, simple &amp; powerful blog framework.Hexo 是一个快速、简洁且高效的博客框架。</li>
</ul>
<p>2.它有什么优点?</p>
<ul>
<li>速度快: 几十篇博文,只需数秒就可以生成静态网页</li>
<li>一键部署: 只需一条命令就可以完成部署</li>
<li>支持MarkDown语法</li>
<li>有丰富的插件库</li>
</ul>
<p>想要更多了解,还需各位自行上官网或Google.</p>
<h2 id="安装和使用Git"><a href="#安装和使用Git" class="headerlink" title="安装和使用Git"></a>安装和使用Git</h2><ol>
<li>安装<ul>
<li>Windows<br>[官网下载]<a href="可能有些慢">6</a>或[点此下载][7],之后就是小白安装,这是[安装详细教程][8]</li>
<li>Linux<br><code>apt install git 或 yum install git</code></li>
</ul>
</li>
<li><p>怎么打开和使用git呢?<br>![右击鼠标点击GitBash][9]<br>![命令行使用git][10]</p>
</li>
<li><p>Git基础操作<br>![GIt基础操作][11]</p>
</li>
<li><p>Git教程: [ProGit(中文版)][12]  [廖雪峰GIt教程][13]</p>
</li>
</ol>
<h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><ul>
<li>Windows<br>根据自己系统版本在[官网下载][14]安装即可.</li>
<li>Linux<br>  apt install nodejs</li>
</ul>
<h2 id="安装淘宝cnpm"><a href="#安装淘宝cnpm" class="headerlink" title="安装淘宝cnpm"></a>安装淘宝cnpm</h2><ul>
<li>npm 速度会有点慢,所以可以使用淘宝的cnpm代替npm,用法和npm几乎一样.</li>
<li>安装:  <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><ul>
<li>Windows 桌面右击鼠标,点击Git Bash Here,进入命令行,执行以上命令</li>
<li>Linux 直接在命令行执行以上命令</li>
</ul>
</li>
</ul>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><ul>
<li><p>安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cnpm install -g hexo-cli</div><div class="line">npm install hexo --save</div></pre></td></tr></table></figure>
</li>
<li><p>创建博客文件夹(比如:E:/blog/joahcy或/home/blog/joahcy)并初始化配置</p>
<ul>
<li>Windows 进入博客文件夹(如我的是joahcy文件夹),右击鼠标,点击Git Bash Here,进入命令行,执行以下操作</li>
<li>Linux 进入博客文件夹,执行以下操作<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo init</div><div class="line">npm install</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>初始化并且依赖安装完成后,博客目录大概如下:<br>![初始化后目录][15]</p>
<ul>
<li><p>安装Hexo插件,保证后面操作不出错,在博客文件夹执行以下操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-deployer-heroku --save</div><div class="line">npm install hexo-deployer-rsync --save</div><div class="line">npm install hexo-deployer-openshift --save</div><div class="line">npm install hexo-renderer-marked@0.2 --save</div><div class="line">npm install hexo-renderer-stylus@0.2 --save</div><div class="line">npm install hexo-generator-feed@1 --save</div><div class="line">npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure>
</li>
<li><p>生成静态文件<br><code>hexo g</code></p>
</li>
<li>测试,本地查看效果<ul>
<li>执行 <code>hexo s</code></li>
<li>浏览器访问: <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 测试是否成功(端口默认4000)<br>![博客雏形][16]</li>
</ul>
</li>
</ul>
<h2 id="将博客部署到Github上"><a href="#将博客部署到Github上" class="headerlink" title="将博客部署到Github上"></a>将博客部署到Github上</h2><ul>
<li>创建github账户,[Github首页][17]点击右上角Sign up进行注册</li>
<li><p>创建项目代码库<br>  注册完成后,点击New repository. 注意名字一定是 yourname.github.io,如图所示:<br>![创建仓库][18]</p>
</li>
<li><p>配置SSH秘钥<br>配置Github的SSH密钥可以让本地git项目与远程的github建立联系,让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步.操作如下：<br>1.查看本机用户目录是否存在SSH秘<br>2.若不存在则创建新的秘钥,需填写自己的Github注册时的邮箱<br><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code><br>相关提示:</p>
<pre><code>Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]
</code></pre><p>直接回车,直接回车,则将密钥按默认文件进行存储.<br>然后根据提示,输入密码和确认密码(其实可以不用密码,就是到输密码的地方,都直接回车,所以后面每次push就只需回车就可以).相关提示如下：</p>
<pre><code>Enter passphrase (empty for no passphrase): [Type a passphrase]
Enter same passphrase again: [Type passphrase again]
</code></pre><p>  输入完成之后，屏幕会显示如下信息：</p>
<pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.
Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.
The key fingerprint is:
01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com
</code></pre><p>3.在GitHub账户中添加你的公钥,将公钥文件id_rsa.pub的内容复制<br>4.登录Github,右上角进入settings,然后左侧点击<code>SSH and GPG keys</code>,接着点击<code>New SSH key</code>,如图:<br>![New SSH key][19]<br>5.测试<br>可以输入下面的命令，看看设置是否成功<br><code>ssh -T git@github.com</code><br>如果出现下面的信息,则表示设置成功:</p>
<pre><code>Hi joahcy! You&apos;ve successfully authenticated, but GitHub does not provide shell access.
</code></pre><p>6.配置用户信息</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;joahcy&quot;//用户名</div><div class="line">git config --global user.email  &quot;joahcy915@gmail.com&quot;//填写自己的邮箱</div></pre></td></tr></table></figure>
</li>
</ul>
<p>至此秘钥配置完成,本机已与Github建立了联系.</p>
<ul>
<li><p>修改博客目录(E:/blog/joahcy)下的_config.yml配置文件 (注意: 配置时,每个键值对之间都要加个空格)<br>  1.根据个人情况修改Site,Url和Pagination部分<br>  2.修改Deploy部分<br>  登录Github打开项目username.github.io<br>  ![打开项目][20]</p>
<p>  复制项目HTTPS路径<br>  ![复制项目HTTPS路径][21]</p>
<p>  找到关键字deploy,进行如图修改,repository为刚才复制的路径<br>  ![修改deploy][22]</p>
</li>
<li><p>部署<br>进入博客目录(E:/blog/joahcy),执行以下命令.</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
</li>
</ul>
<p>或者直接执行<code>hexo g -d</code><br>执行完之后会让你输入github的账号和密码,输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了.对应的地址是 username.github.io(我的是：joahcy.github.io)<br>如果觉得输入用户名和密码麻烦,可以修改deploy部分的repository,如图:<br>![修改为SSH连接][23]<br>![修改][24]<br>这样部署的时候就不用输入用户名和密码,是不是方便多了?</p>
<h2 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h2><p>通过浏览器访问自己的博客,地址为<a href="http://yourname.github.io" target="_blank" rel="external">http://yourname.github.io</a><br>![博客雏形][25]</p>
<h2 id="根据个人喜好修改博客主题"><a href="#根据个人喜好修改博客主题" class="headerlink" title="根据个人喜好修改博客主题"></a>根据个人喜好修改博客主题</h2><ul>
<li>1.在[hexo官网][26]找到自己喜欢的主题,然后克隆下来.  (博客的主题都保存在博客根目录的themes文件夹下)<br>如克隆Next主题,进入博客目录,执行一下命令:<br><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></li>
<li>2.找到全局_config.yml文件的theme关键字,改为next.(注:值是themes文件夹下主题文件夹的名字)</li>
<li>3.详细修改主题样式配置<br>修改主题目录下的_config.yml文件,在这就不详细解释了,可以找相应的教程来修改(注:简洁大方next主题有很多教程,当然也有其他的主题)</li>
</ul>
<h2 id="通过域名访问博客"><a href="#通过域名访问博客" class="headerlink" title="通过域名访问博客"></a>通过域名访问博客</h2><ul>
<li>通过域名商购买自己喜欢的的域名(万网,西部数码,GoDaddy等等),我用的万网.<br>搜索<br>![搜索][27]<br>找到可注册的域名<br>![找到可注册的域名][28]<br>如果用的万网,进入个人中心,点击域名<br>![进入个人中心][29]<br>点击域名后面的管理<br>![点击管理][30]<br>修改DNS 为f1gns1.dnspod.net    和 f1gns2.dnspod.net<br>![修改DNS][31]</li>
<li>在DNSPod官网注册账号,并添加DNS解析<br>进入域名解析<br>![进入域名解析][32]<br>添加域名<br>![添加域名][33]<br>获取博客IP地址:  CMD 里面  <code>ping  yourname.github.io</code> 得到IP<br>点击域名进去,添加两条记录,IP为刚才ping 得的ip<br>![添加记录][34]</li>
<li>在博客source目录下添加CNAME文件,内容为你的域名,然后再一次部署<br><code>hexo g -d</code></li>
<li>耐心等待……大约十几分钟就可以通过域名来访问了</li>
</ul>
<h2 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h2><ul>
<li>用hexo发表新文章<br><code>hexo n &quot;文章标题&quot;</code><br>会在项目 source/_posts 中生成 对应的.md文件,用编辑器打开编写即可。<br>当然,也可以直接在source/_posts中新建一个md文件,写完后,推送到服务器上,执行以下命令即可在我们的站点看到新的文章.<br><code>hexo g -d</code></li>
<li>用Markdown写文章<ul>
<li>什么是markdown?<br>Markdown 是一种轻量级的「标记语言」,它的优点很多,目前也被越来越多的写作爱好者,撰稿者广泛使用.看到这里请不要被「标记」,「语言」所迷惑,Markdown 的语法十分简单.常用的标记符号也不超过十个,这种相对于更为复杂的HTML 标记语言来说,Markdown可谓是十分轻量的,学习成本也不需要太多,且一旦熟悉这种语法规则,会有一劳永逸的效果.</li>
<li>markdown有以下优点:<ul>
<li>专注你的文字内容而不是排版样式.</li>
<li>轻松的导出 HTML、PDF 和本身的 .md 文件.</li>
<li>纯文本内容,兼容所有的文本编辑器与字处理软件.</li>
<li>可读,直观.适合所有人的写作语言.</li>
</ul>
</li>
<li>用什么工具写?<ul>
<li>Windows : MarkdownPad2</li>
<li>Mac :用Mou 或 Atom</li>
<li>Web端: 用简书</li>
</ul>
</li>
<li>更多资料可以查看: [认识与入门 Markdown][35]</li>
</ul>
</li>
</ul>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>至此,博客基本搭建完成.搭建了1天很累,但是还是有一定的成就感的.以后的路还很长,好好写文章提高自己吧.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于GitHub&quot;&gt;&lt;a href=&quot;#关于GitHub&quot; class=&quot;headerlink&quot; title=&quot;关于GitHub&quot;&gt;&lt;/a&gt;关于GitHub&lt;/h2&gt;&lt;p&gt;1.Github的优点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[GitHub官网][4]&lt;/li&gt;
&lt;l
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>博客开通啦</title>
    <link href="http://yoursite.com/2017/04/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/04/02/我的第一篇博客/</id>
    <published>2017-04-02T06:24:47.000Z</published>
    <updated>2017-08-02T13:47:05.197Z</updated>
    
    <content type="html"><![CDATA[<h4 id="我的博客开工了，欢迎大家打赏，哈哈哈…"><a href="#我的博客开工了，欢迎大家打赏，哈哈哈…" class="headerlink" title="我的博客开工了，欢迎大家打赏，哈哈哈…"></a>我的博客开工了，欢迎大家打赏，哈哈哈…</h4><a id="more"></a>
<h4 id="Hello-Bug"><a href="#Hello-Bug" class="headerlink" title="Hello Bug"></a>Hello Bug</h4><p>点进来干嘛， 点进来又不打赏。<br>想打赏也没用， 我又没放二维码.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;我的博客开工了，欢迎大家打赏，哈哈哈…&quot;&gt;&lt;a href=&quot;#我的博客开工了，欢迎大家打赏，哈哈哈…&quot; class=&quot;headerlink&quot; title=&quot;我的博客开工了，欢迎大家打赏，哈哈哈…&quot;&gt;&lt;/a&gt;我的博客开工了，欢迎大家打赏，哈哈哈…&lt;/h4&gt;
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
</feed>
